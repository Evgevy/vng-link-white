/******/ (function() { // webpackBootstrap
/******/ 	"use strict";
/******/ 	var __webpack_modules__ = ({

/***/ "./js/modules/accordion/accordion.js":
/*!*******************************************!*\
  !*** ./js/modules/accordion/accordion.js ***!
  \*******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Accordion: function() { return /* binding */ Accordion; }
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
// export class Accordion {
//   constructor() {
//     this._openHeight = 0;
//     this._documentClickHandler = this._documentClickHandler.bind(this);
//     this._windowResizeHandler = this._windowResizeHandler.bind(this);
//   }

//   init() {
//     document.addEventListener('click', this._documentClickHandler);
//     window.addEventListener('resize', this._windowResizeHandler);
//   }

//   _documentClickHandler(evt) {
//     const target = evt.target;

//     if (!target.closest('[data-accordion="button"]')) {
//       return;
//     }

//     evt.preventDefault();

//     const element = target.closest('[data-accordion="element"]');

//     if (element.classList.contains('is-active')) {
//       this.closeAccordion(element);
//     } else {
//       this.openAccordion(element);
//     }
//   }

//   openAccordion(element) {
//     element.classList.add('is-active');
//   }

//   closeAccordion(element) {
//     element.classList.remove('is-active');
//   }

//   closeAllAccordion(parent) {
//     const elements = parent.querySelectorAll('[data-accordion="element"]');

//     elements.forEach((element) => {
//       element.classList.remove('is-active');
//     });
//   }

//   _resizeObserver() {
//     return new ResizeObserver((entries) => {
//       for (let entry of entries) {
//         if (entry.target.classList.contains('is-active')) {
//           this._updateAccordionHeight();
//         }
//       }
//     });
//   }

//   _updateAccordionHeight() {
//     const closeElements = document.querySelectorAll('[data-accordion="element"]:not(.is-active)');
//   }

//   _windowResizeHandler() {
//   }
// }
var Accordion = /*#__PURE__*/function () {
  function Accordion() {
    _classCallCheck(this, Accordion);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._windowResizeHandler = this._windowResizeHandler.bind(this);
  }
  _createClass(Accordion, [{
    key: "init",
    value: function init() {
      document.addEventListener('click', this._documentClickHandler);
      window.addEventListener('resize', this._windowResizeHandler);
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-accordion="button"]')) {
        return;
      }
      evt.preventDefault();
      var element = target.closest('[data-accordion="element"]');
      var parent = target.closest('[data-accordion="parent"]');
      if (element.classList.contains('is-active')) {
        this.closeAccordion(element);
      } else {
        this.closeAllAccordion(parent); // Закрываем все аккордеоны перед открытием нового
        this.openAccordion(element);
      }
    }
  }, {
    key: "openAccordion",
    value: function openAccordion(element) {
      var content = element.querySelector('[data-accordion="content"]');
      element.classList.add('is-active');
      content.style.height = content.scrollHeight + 'px';
    }
  }, {
    key: "closeAccordion",
    value: function closeAccordion(element) {
      var content = element.querySelector('[data-accordion="content"]');
      element.classList.remove('is-active');
      content.style.height = 0;
    }
  }, {
    key: "closeAllAccordion",
    value: function closeAllAccordion(parent) {
      var _this = this;
      var elements = parent.querySelectorAll('[data-accordion="element"]');
      elements.forEach(function (element) {
        _this.closeAccordion(element);
      });
    }
  }, {
    key: "_windowResizeHandler",
    value: function _windowResizeHandler() {
      // Обновление высоты при изменении размера окна
    }
  }]);
  return Accordion;
}();

/***/ }),

/***/ "./js/modules/accordion/init-accordion.js":
/*!************************************************!*\
  !*** ./js/modules/accordion/init-accordion.js ***!
  \************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initAccordion: function() { return /* binding */ initAccordion; }
/* harmony export */ });
/* harmony import */ var _accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./accordion */ "./js/modules/accordion/accordion.js");

var initAccordion = function initAccordion() {
  var accordion = new _accordion__WEBPACK_IMPORTED_MODULE_0__.Accordion();
  accordion.init();
};


/***/ }),

/***/ "./js/modules/custom-select/custom-select.js":
/*!***************************************************!*\
  !*** ./js/modules/custom-select/custom-select.js ***!
  \***************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   CustomSelect: function() { return /* binding */ CustomSelect; }
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var CustomSelect = /*#__PURE__*/function () {
  function CustomSelect() {
    _classCallCheck(this, CustomSelect);
    this._selects = null;
    this._select = null;
    this._onSelectClick = this._onSelectClick.bind(this);
    this._onSelectKeydown = this._onSelectKeydown.bind(this);
    this._onSelectItemClick = this._onSelectItemClick.bind(this);
    this._onSelectItemKeydown = this._onSelectItemKeydown.bind(this);
    this._onLastSelectItemKeydown = this._onLastSelectItemKeydown.bind(this);
    this._onDocumentClick = this._onDocumentClick.bind(this);
    this._onEscapeKeydown = this._onEscapeKeydown.bind(this);
  }
  _createClass(CustomSelect, [{
    key: "init",
    value: function init() {
      var _this = this;
      this._selects = document.querySelectorAll('[data-select]');
      if (!this._selects) {
        return;
      }
      this._selects.forEach(function (select) {
        _this._setSelectAction(select);
      });
    }
  }, {
    key: "_setSelectAction",
    value: function _setSelectAction(select) {
      var _this2 = this;
      this._select = select;
      var button = this._select.querySelector('[data-select-button]');
      var items = this._select.querySelectorAll('[data-select-item]');
      button.addEventListener('click', this._onSelectClick);
      button.addEventListener('keydown', this._onSelectKeydown);
      items.forEach(function (item, index) {
        item.addEventListener('click', function () {
          _this2._onSelectItemClick(item, index);
        });
        item.addEventListener('keydown', function (evt) {
          _this2._onSelectItemKeydown(item, index, evt);
        });
        if (index === items.length - 1) {
          item.addEventListener('keydown', _this2._onLastSelectItemKeydown);
        }
      });
    }
  }, {
    key: "_setSelectItemAction",
    value: function _setSelectItemAction(item, index) {
      var parent = item.closest('[data-select]');
      var buttonText = parent.querySelector('[data-select-button] .custom-select__text');
      var itemText = item.textContent;
      var select = parent.querySelector('select');
      var changeEvent = new CustomEvent('change');
      var inputEvent = new CustomEvent('input');
      select.dispatchEvent(changeEvent);
      select.dispatchEvent(inputEvent);
      var options = parent.querySelectorAll('option');
      var form = select.closest('form');
      if (form) {
        var formChangeEvent = new CustomEvent('change');
        var formInputEvent = new CustomEvent('input');
        form.dispatchEvent(formChangeEvent);
        form.dispatchEvent(formInputEvent);
      }
      var activeItem = parent.querySelector('[data-select-item][aria-selected="true"]');
      if (item.getAttribute('aria-selected') === true) {
        this._closeSelect();
      } else {
        if (activeItem) {
          activeItem.setAttribute('aria-selected', false);
        }
        item.setAttribute('aria-selected', 'true');
        buttonText.innerText = itemText;
        options[index + 1].selected = true;
        this._closeSelect();
      }
    }
  }, {
    key: "_closeSelect",
    value: function _closeSelect() {
      var activeSelect = document.querySelector('[data-select].is-open');
      document.removeEventListener('click', this._onDocumentClick);
      document.removeEventListener('click', this._onEscapeKeydown);
      if (activeSelect) {
        activeSelect.classList.remove('is-open');
      }
    }
  }, {
    key: "_onSelectClick",
    value: function _onSelectClick(evt) {
      var parent = evt.target.closest('[data-select]');
      var activeSelect = document.querySelector('[data-select].is-open');
      if (activeSelect && activeSelect === parent) {
        activeSelect.classList.remove('is-open');
        return;
      }
      if (activeSelect) {
        this._closeSelect();
      }
      document.addEventListener('click', this._onDocumentClick);
      document.addEventListener('keydown', this._onEscapeKeydown);
      if (parent.classList.contains('is-open')) {
        parent.classList.remove('is-open');
      } else {
        parent.classList.add('is-open');
      }
    }
  }, {
    key: "_onSelectKeydown",
    value: function _onSelectKeydown(evt) {
      var parent = evt.target.closest('[data-select]');
      if (evt.shiftKey && evt.key === 'Tab' && parent.classList.contains('is-open')) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onSelectItemClick",
    value: function _onSelectItemClick(item, index) {
      this._setSelectItemAction(item, index);
    }
  }, {
    key: "_onSelectItemKeydown",
    value: function _onSelectItemKeydown(item, index, evt) {
      if (evt.key === 'Enter') {
        this._setSelectItemAction(item, index);
      }
    }
  }, {
    key: "_onLastSelectItemKeydown",
    value: function _onLastSelectItemKeydown(evt) {
      if (evt.key === 'Tab') {
        this._closeSelect();
      }
    }
  }, {
    key: "_onDocumentClick",
    value: function _onDocumentClick(evt) {
      if (!evt.target.closest('[data-select]')) {
        this._closeSelect();
      }
    }
  }, {
    key: "_onEscapeKeydown",
    value: function _onEscapeKeydown(evt) {
      if (evt.key === 'Escape') {
        this._closeSelect();
      }
    }
  }]);
  return CustomSelect;
}();

/***/ }),

/***/ "./js/modules/custom-select/init-custom-select.js":
/*!********************************************************!*\
  !*** ./js/modules/custom-select/init-custom-select.js ***!
  \********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initCustomSelect: function() { return /* binding */ initCustomSelect; }
/* harmony export */ });
/* harmony import */ var _custom_select__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./custom-select */ "./js/modules/custom-select/custom-select.js");

var initCustomSelect = function initCustomSelect() {
  var customSelect = new _custom_select__WEBPACK_IMPORTED_MODULE_0__.CustomSelect();
  customSelect.init();
};


/***/ }),

/***/ "./js/modules/header-accordion/header-accordion.js":
/*!*********************************************************!*\
  !*** ./js/modules/header-accordion/header-accordion.js ***!
  \*********************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   HeaderAccordion: function() { return /* binding */ HeaderAccordion; }
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var HeaderAccordion = /*#__PURE__*/function () {
  function HeaderAccordion() {
    _classCallCheck(this, HeaderAccordion);
    this._menu = document.querySelector('[data-header-accordion]');
    this._breakpointMedia = window.matchMedia('(max-width: 1080px)');
    this._linkClickHandler = this._linkClickHandler.bind(this);
    this._breakpointChecker = this._breakpointChecker.bind(this);
  }
  _createClass(HeaderAccordion, [{
    key: "init",
    value: function init() {
      if (!this._menu) {
        return;
      }
      this._breakpointMedia.addEventListener('change', this._breakpointChecker);
      this._breakpointChecker();
    }
  }, {
    key: "_linkClickHandler",
    value: function _linkClickHandler(evt) {
      evt.preventDefault();
      var item = evt.target.closest('.menu-item-has-children');
      if (item.classList.contains('is-active')) {
        item.classList.remove('is-active');
      } else {
        item.classList.add('is-active');
      }
    }
  }, {
    key: "_breakpointChecker",
    value: function _breakpointChecker() {
      var _this = this;
      var menuItems = document.querySelectorAll('.menu-item-has-children');
      if (!menuItems.length) {
        return;
      }
      if (this._breakpointMedia.matches) {
        menuItems.forEach(function (item) {
          var link = item.querySelector('.main-nav__link');
          link.addEventListener('click', _this._linkClickHandler);
        });
      } else {
        menuItems.forEach(function (item) {
          var link = item.querySelector('.main-nav__link');
          link.removeEventListener('click', _this._linkClickHandler);
          if (item.classList.contains('is-active')) {
            item.classList.remove('is-active');
          }
        });
      }
    }
  }]);
  return HeaderAccordion;
}();

/***/ }),

/***/ "./js/modules/header-accordion/init-header-accordion.js":
/*!**************************************************************!*\
  !*** ./js/modules/header-accordion/init-header-accordion.js ***!
  \**************************************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initHeaderAccordion: function() { return /* binding */ initHeaderAccordion; }
/* harmony export */ });
/* harmony import */ var _header_accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header-accordion */ "./js/modules/header-accordion/header-accordion.js");

var initHeaderAccordion = function initHeaderAccordion() {
  var headerAccordion = new _header_accordion__WEBPACK_IMPORTED_MODULE_0__.HeaderAccordion();
  headerAccordion.init();
};


/***/ }),

/***/ "./js/modules/header/header.js":
/*!*************************************!*\
  !*** ./js/modules/header/header.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Header: function() { return /* binding */ Header; }
/* harmony export */ });
/* harmony import */ var _utils_scroll_lock_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock.js */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock.js */ "./js/utils/focus-lock.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Header = /*#__PURE__*/function () {
  function Header() {
    _classCallCheck(this, Header);
    this._header = document.querySelector('[data-header]');
    this._toggle = document.querySelector('[data-toggle-menu]');
    this._scrollLock = new _utils_scroll_lock_js__WEBPACK_IMPORTED_MODULE_0__.ScrollLock();
    this._focusLock = new _utils_focus_lock_js__WEBPACK_IMPORTED_MODULE_1__.FocusLock();
    this._isMenuOpen = false;
    this._onToggleClick = this._onToggleClick.bind(this);
    this._onDocumentKeydown = this._onDocumentKeydown.bind(this);
    this._onDocumentClick = this._onDocumentClick.bind(this);
  }
  _createClass(Header, [{
    key: "init",
    value: function init() {
      if (!this._toggle) {
        return;
      }
      this._toggle.addEventListener('click', this._onToggleClick);
    }
  }, {
    key: "_openMenu",
    value: function _openMenu() {
      this._isMenuOpen = true;
      this._header.classList.add('is-open');
      this._scrollLock.disableScrolling();
      document.addEventListener('keydown', this._onDocumentKeydown);
      document.addEventListener('click', this._onDocumentClick);
      this._focusLock.lock('[data-header]');
    }
  }, {
    key: "_closeMenu",
    value: function _closeMenu() {
      this._isMenuOpen = false;
      this._header.classList.remove('is-open');
      this._scrollLock.enableScrolling();
      document.removeEventListener('keydown', this._onDocumentKeydown);
      document.removeEventListener('click', this._onDocumentClick);
      this._focusLock.unlock('[data-header]');
    }
  }, {
    key: "_onToggleClick",
    value: function _onToggleClick() {
      if (this._isMenuOpen) {
        this._closeMenu();
      } else {
        this._openMenu();
      }
    }
  }, {
    key: "_onDocumentKeydown",
    value: function _onDocumentKeydown(evt) {
      if (evt.key === 'Escape') {
        this._closeMenu();
      }
    }
  }, {
    key: "_onDocumentClick",
    value: function _onDocumentClick(evt) {
      if (evt.target.hasAttribute('[data-close-menu]')) {
        this._closeMenu();
      }
    }
  }]);
  return Header;
}();

/***/ }),

/***/ "./js/modules/header/init-header.js":
/*!******************************************!*\
  !*** ./js/modules/header/init-header.js ***!
  \******************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initHeader: function() { return /* binding */ initHeader; }
/* harmony export */ });
/* harmony import */ var _header__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./header */ "./js/modules/header/header.js");

var initHeader = function initHeader() {
  var header = new _header__WEBPACK_IMPORTED_MODULE_0__.Header();
  header.init();
};


/***/ }),

/***/ "./js/modules/init-info-slider.js":
/*!****************************************!*\
  !*** ./js/modules/init-info-slider.js ***!
  \****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initInfoSlider: function() { return /* binding */ initInfoSlider; }
/* harmony export */ });
// const slider = document.querySelector('[data-slider="info"]');

var initInfoSlider = function initInfoSlider() {
  var main = new Swiper('.works__slider', {
    slidesPerView: 3,
    spaceBetween: 100,
    loop: true,
    centeredSlides: true,
    speed: 500,
    autoplay: {
      enabled: false
    },
    breakpoints: {
      300: {
        slidesPerView: 1,
        autoplay: {
          enabled: true,
          delay: 4000
        }
      },
      560: {
        slidesPerView: 2,
        autoplay: {
          enabled: false
        }
      },
      900: {
        slidesPerView: 2,
        autoplay: {
          enabled: false
        }
      },
      1660: {
        slidesPerView: 3,
        autoplay: {
          enabled: false
        }
      }
    },
    navigation: {
      nextEl: '.swiper-button-next-works',
      prevEl: '.swiper-button-prev-works'
    },
    pagination: {
      el: '.works-swiper-pagination',
      type: "progressbar"
    }
  });
  var team = new Swiper('.ticker__marquee', {
    slidesPerView: 4,
    spaceBetween: 100,
    loop: true,
    loopAdditionalSlides: 3,
    autoplay: {
      delay: 0
      // pauseOnMouseEnter: true,       
      // disableOnInteraction: false,    
    },

    speed: 3000,
    breakpoints: {
      300: {
        spaceBetween: 60,
        slidesPerView: 2,
        speed: 2000
      },
      768: {
        spaceBetween: 100,
        slidesPerView: 4,
        speed: 3000
      }
    }
  });
  var eventSwiper;
  var initSwiper = function initSwiper() {
    if (window.innerWidth <= 1024) {
      if (!eventSwiper) {
        // Проверяем, был ли уже инициализирован слайдер
        eventSwiper = new Swiper('.grade__slider', {
          slidesPerView: 1,
          spaceBetween: 10,
          // autoHeight: true,
          speed: 800,
          autoplay: {
            delay: 3000
          },
          pagination: {
            el: '.grade-swiper-pagination',
            clickable: true
          }
        });
      }
    } else {
      if (eventSwiper) {
        // Если слайдер был инициализирован, уничтожаем его
        eventSwiper.destroy(true, true);
        eventSwiper = null;
      }
    }
  };

  // Инициализация при загрузке страницы
  document.addEventListener('DOMContentLoaded', initSwiper);

  // Инициализация при изменении размеров окна
  window.addEventListener('resize', initSwiper);
  var plus = false;
  var plusSwiper;
  function swiperPlus() {
    var sliderElement = document.querySelector('.plus__slider');
    if (window.innerWidth <= 1060) {
      if (!plus && sliderElement) {
        plus = true;
        plusSwiper = new Swiper('.plus__slider', {
          slidesPerView: 2.5,
          spaceBetween: 10,
          centeredSlides: true,
          speed: 800,
          autoplay: {
            delay: 3000
          },
          // observer: true,
          // observeParents: true,
          // observeSlideChildren: true,
          breakpoints: {
            310: {
              slidesPerView: .85
            },
            340: {
              slidesPerView: .9
            },
            370: {
              slidesPerView: .85
            },
            380: {
              slidesPerView: 1
            },
            410: {
              slidesPerView: 1.1
            },
            460: {
              slidesPerView: 1.1
            },
            530: {
              slidesPerView: 1.25
            },
            555: {
              slidesPerView: 1.4
            },
            670: {
              slidesPerView: 1.5
            },
            700: {
              slidesPerView: 1.7
            },
            740: {
              slidesPerView: 1.8
            },
            797: {
              slidesPerView: 1.99
            },
            920: {
              slidesPerView: 2.2
            },
            980: {
              slidesPerView: 2.5
            }
          },
          // navigation: {
          //   nextEl: '.days-swiper-button-next',
          //   prevEl: '.days-swiper-button-prev'
          // },

          pagination: {
            el: '.plus-swiper-pagination',
            type: 'progressbar'
          }
        });
      }
    } else if (plusSwiper) {
      plusSwiper.destroy();
      plus = false;
    }
  }
  swiperPlus();
  window.addEventListener("resize", plusSwiper);
};


/***/ }),

/***/ "./js/modules/init-phone-mask.js":
/*!***************************************!*\
  !*** ./js/modules/init-phone-mask.js ***!
  \***************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initPhoneMask: function() { return /* binding */ initPhoneMask; }
/* harmony export */ });
var phoneInputs = document.querySelectorAll('input[type="tel"]');
var COUNTRY_CODE = '+7';
var length = COUNTRY_CODE.length;
var replacePhoneValue = function replacePhoneValue(el) {
  var matrix = "".concat(COUNTRY_CODE, " (___) ___ __ __");
  var def = matrix.replace(/\D/g, '');
  var i = 0;
  var val = el.value.replace(/\D/g, '');
  if (def.length >= val.length) {
    val = def;
  }
  el.value = matrix.replace(/./g, function (a) {
    // eslint-disable-next-line no-nested-ternary
    return /[_\d]/.test(a) && i < val.length ? val.charAt(i++) : i >= val.length ? '' : a;
  });
};
var onInputPhoneInput = function onInputPhoneInput(_ref) {
  var target = _ref.target;
  replacePhoneValue(target);
};
var onFocusPhoneInput = function onFocusPhoneInput(_ref2) {
  var target = _ref2.target;
  if (!target.value) {
    target.value = COUNTRY_CODE;
    target.addEventListener('input', onInputPhoneInput);
    target.addEventListener('blur', onBlurPhoneInput);
    target.addEventListener('keydown', onKeydownPhoneInput);
  }
};
var onKeydownPhoneInput = function onKeydownPhoneInput(e) {
  if (e.target.selectionStart <= length && e.keyCode !== 8 && e.keyCode !== 46) {
    e.target.setSelectionRange(length, length);
  }
  if ((e.target.selectionStart === length || e.target.selectionStart === 1) && e.keyCode === 8) {
    e.preventDefault();
  }
  if (e.target.selectionStart === 1 && e.keyCode === 46) {
    e.preventDefault();
  }
};
var onBlurPhoneInput = function onBlurPhoneInput(_ref3) {
  var target = _ref3.target;
  if (target.value === COUNTRY_CODE) {
    target.value = '';
    target.removeEventListener('input', onInputPhoneInput);
    target.removeEventListener('blur', onBlurPhoneInput);
  }
};
var initPhoneMask = function initPhoneMask() {
  if (phoneInputs.length) {
    phoneInputs.forEach(function (input) {
      input.addEventListener('focus', onFocusPhoneInput);
      if (input.value) {
        replacePhoneValue(input);
        input.addEventListener('input', onInputPhoneInput);
        input.addEventListener('blur', onBlurPhoneInput);
        input.addEventListener('keydown', onKeydownPhoneInput);
      }
    });
  }
};


/***/ }),

/***/ "./js/modules/init-phone-validation.js":
/*!*********************************************!*\
  !*** ./js/modules/init-phone-validation.js ***!
  \*********************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initPhoneValidation: function() { return /* binding */ initPhoneValidation; }
/* harmony export */ });
var initPhoneValidation = function initPhoneValidation() {
  var forms = document.querySelectorAll('[data-validate-form] form');
  if (!forms) {
    return;
  }
  forms.forEach(function (form) {
    if (form.querySelector('[data-validate-type="phone"]')) {
      var phoneInput = form.querySelector('[data-validate-type="phone"]').querySelector('input');
      phoneInput.addEventListener('input', function () {
        phoneInput.setCustomValidity('');
      });
      form.addEventListener('submit', function (evt) {
        if (phoneInput.value.length < 18) {
          phoneInput.setCustomValidity('Телефон должен содержать 11 цифр');
          phoneInput.reportValidity();
          evt.preventDefault();
        } else {
          phoneInput.setCustomValidity('');
        }
      });
    }
  });
};


/***/ }),

/***/ "./js/modules/initAnimation.js":
/*!*************************************!*\
  !*** ./js/modules/initAnimation.js ***!
  \*************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initAnimation: function() { return /* binding */ initAnimation; }
/* harmony export */ });
var initAnimation = function initAnimation() {
  // Анимация для intro
  var title = document.querySelector('.intro__title');
  var text = document.querySelector('.intro__text');
  function showElement(element) {
    element.classList.remove('hidden');
    element.classList.add('show');
  }
  document.addEventListener('DOMContentLoaded', function () {
    setTimeout(function () {
      return showElement(title);
    }, 400);
    setTimeout(function () {
      return showElement(text);
    }, 1100);
  });

  // Анимация для offer
  var offerList = document.querySelector('.offer__list');
  var offerItems = offerList.querySelectorAll('li');

  // Функция для показа элементов
  var showOfferItem = function showOfferItem(item, delay) {
    setTimeout(function () {
      item.classList.remove('hidden');
      item.classList.add('show');
    }, delay);
  };

  // Создание IntersectionObserver
  var observer = new IntersectionObserver(function (entries) {
    if (entries[0].isIntersecting) {
      offerItems.forEach(function (item, index) {
        showOfferItem(item, (offerItems.length - index) * 400);
      });
    }
  }, {
    threshold: 0,
    rootMargin: '0px 0px 0px 0px'
  });

  // Функция для управления поведением в зависимости от ширины экрана
  var handleResize = function handleResize() {
    if (window.matchMedia('(min-width: 690px)').matches) {
      // Если ширина экрана больше или равна 690px, запускаем observer
      observer.observe(offerList);
    } else {
      // Если ширина экрана меньше 690px, делаем блоки статичными и отключаем observer
      observer.disconnect();
      offerItems.forEach(function (item) {
        item.classList.remove('hidden', 'show');
      });
    }
  };

  // Проверяем размер экрана при загрузке страницы
  handleResize();

  // Добавляем обработчик события на изменение размера экрана
  window.addEventListener('resize', handleResize);

  // Анимация для plus
  var plusInfoBlocks = document.querySelectorAll('.plus__info');
  var showPlusInfo = function showPlusInfo(block, delay) {
    setTimeout(function () {
      block.classList.remove('hidden');
      block.classList.add('show');
    }, delay);
  };
  var observerPlus = new IntersectionObserver(function (entries) {
    if (entries[0].isIntersecting) {
      plusInfoBlocks.forEach(function (block, index) {
        showPlusInfo(block, index * 400);
      });
    }
  }, {
    threshold: 0.5
  });
  observerPlus.observe(document.querySelector('.plus__slider'));

  // Анимация для линии заголовка в grade
  var gradeInfoTitles = document.querySelectorAll('.grade__info-title');

  // Настройка наблюдателя для каждого заголовка
  var observerGrade = new IntersectionObserver(function (entries) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        // Поиск элемента внутри текущего заголовка
        var gradeInfoTitleLine = entry.target.querySelector('.grade__info-title-line');
        if (gradeInfoTitleLine) {
          setTimeout(function () {
            gradeInfoTitleLine.classList.add('active');
          }, 500);
        }
      }
    });
  }, {
    threshold: 1
  });

  // Начало наблюдения для каждого заголовка
  gradeInfoTitles.forEach(function (title) {
    observerGrade.observe(title);
  });

  // Анимация для how
  var items = document.querySelectorAll('.how__item');
  var section = document.querySelector('section.how');
  var options = {
    root: null,
    rootMargin: '0px',
    threshold: 0.4
  };
  var observerHow = new IntersectionObserver(function (entries, observer) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        items.forEach(function (item, index) {
          setTimeout(function () {
            item.classList.add('visible');
          }, index * 700);
        });
        observerHow.unobserve(entry.target);
      }
    });
  }, options);
  observerHow.observe(section);

  // Анимация для ways
  var waysItems = document.querySelectorAll('.ways__item');
  var waysSection = document.querySelector('section.ways');
  var optionsWays = {
    root: null,
    rootMargin: '0px 0px -50px 0px',
    threshold: 0.6
  };
  var observerWays = new IntersectionObserver(function (entries, observer) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        waysItems.forEach(function (item, index) {
          setTimeout(function () {
            item.classList.add('visible');
          }, index * 500);
        });
        observer.unobserve(entry.target);
      }
    });
  }, optionsWays);
  observerWays.observe(waysSection);

  // Анимация для server
  var serverItems = document.querySelectorAll('.server__item');
  var serverSection = document.querySelector('section.server');
  var optionsServer = {
    root: null,
    rootMargin: '0px 0px 0px 0px',
    threshold: 0.55
  };
  var observerServer = new IntersectionObserver(function (entries, observer) {
    entries.forEach(function (entry) {
      if (entry.isIntersecting) {
        serverItems.forEach(function (item, index) {
          setTimeout(function () {
            item.classList.add('visible');
          }, index * 500);
        });
        observer.unobserve(entry.target);
      }
    });
  }, optionsServer);
  observerServer.observe(serverSection);
};
initAnimation();


/***/ }),

/***/ "./js/modules/initButtons.js":
/*!***********************************!*\
  !*** ./js/modules/initButtons.js ***!
  \***********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initButtons: function() { return /* binding */ initButtons; }
/* harmony export */ });
var initButtons = function initButtons() {
  // const galleryButton = () => {
  //     const products = document.querySelectorAll('.gallery__item');
  //     const button = document.querySelector('.gallery__link');
  //     let hidden = true;

  //     if (products.length > 8) {
  //         for (let i = 8; i < products.length; i++) {
  //             products[i].style.display = 'none';
  //         }
  //         if (button) {
  //             button.style.display = 'block';
  //             button.textContent = 'Смотреть ещё...';

  //         }

  //     }

  //     if (button) {
  //         button.addEventListener('click', function () {
  //             for (let i = 8; i < products.length; i++) {
  //                 if (hidden) {
  //                     products[i].style.display = 'block';
  //                     button.textContent = 'Скрыть';
  //                 } else {
  //                     products[i].style.display = 'none';
  //                     button.textContent = 'Смотреть еще...';
  //                 }
  //             }
  //             hidden = !hidden;
  //         });

  //     }
  // }

  // galleryButton();

  // const eventButton = () => {
  //     const productsEvent = document.querySelectorAll('.events__item');
  //     const buttonEvent = document.querySelector('.events__button.intro__link');
  //     let hiddenEvent = true;

  //     if (productsEvent.length > 9) {
  //         for (let i = 9; i < productsEvent.length; i++) {
  //             productsEvent[i].style.display = 'none';
  //         }
  //         if (buttonEvent) {
  //             buttonEvent.style.display = 'flex';
  //             buttonEvent.textContent = 'Смотреть ещё...';

  //         }

  //     }

  //     if (buttonEvent) {
  //         buttonEvent.addEventListener('click', function () {
  //             for (let i = 9; i < productsEvent.length; i++) {
  //                 if (hiddenEvent) {
  //                     productsEvent[i].style.display = 'block';
  //                     buttonEvent.textContent = 'Скрыть';
  //                 } else {
  //                     productsEvent[i].style.display = 'none';
  //                     buttonEvent.textContent = 'Смотреть еще...';
  //                 }
  //             }
  //             hiddenEvent = !hiddenEvent;
  //         });

  //     }
  // }
  // eventButton();
  var ticker = function ticker() {
    var marqueeBox = document.querySelector('.ticker__marquee-box');
    if (marqueeBox) {
      marqueeBox.innerHTML += marqueeBox.innerHTML;
    }
  };
  ticker();
};


/***/ }),

/***/ "./js/modules/initScroll.js":
/*!**********************************!*\
  !*** ./js/modules/initScroll.js ***!
  \**********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initScroll: function() { return /* binding */ initScroll; }
/* harmony export */ });
var initScroll = function initScroll() {
  if (window.innerWidth >= 1024) {
    var gradeSection = document.querySelector('.grade');
    var items = document.querySelectorAll('.grade__item');
    var activeIndex = 0;
    var isFixed = false; // Флаг для отслеживания состояния фиксированного класса

    var observerOptions = {
      root: null,
      rootMargin: '0px',
      threshold: 1
    };
    var observer = new IntersectionObserver(function (entries) {
      entries.forEach(function (entry) {
        if (entry.isIntersecting) {
          gradeSection.classList.add('fixed');
          document.body.style.overflow = 'hidden';
          isFixed = true;
        } else {
          gradeSection.classList.remove('fixed');
          document.body.style.overflow = 'auto';
          isFixed = false;
        }
      });
    }, observerOptions);
    observer.observe(gradeSection);
    items[activeIndex].classList.add('active');
    var updateItems = function updateItems(newIndex) {
      items.forEach(function (item, index) {
        if (index === newIndex) {
          item.classList.add('active');
          item.classList.remove('enter-from-left', 'enter-from-right');
        } else {
          item.classList.remove('active');
          if (index < newIndex) {
            item.classList.add('enter-from-left');
          } else {
            item.classList.add('enter-from-right');
          }
        }
      });
    };
    var handleScroll = function handleScroll(event) {
      if (!isFixed) return;
      if (event.deltaY > 0) {
        // Скролл вниз
        if (activeIndex < items.length - 1) {
          event.preventDefault(); // Предотвратить стандартное поведение
          activeIndex++;
          updateItems(activeIndex);
        } else if (activeIndex === items.length - 1) {
          event.preventDefault(); // Предотвратить стандартное поведение
          // Удалить фиксированный класс и позволить прокрутку вниз
          gradeSection.classList.remove('fixed');
          isFixed = false;
          document.body.style.overflow = 'auto';
          window.scrollBy(0, event.deltaY);
        }
      } else {
        // Скролл вверх
        if (activeIndex > 0) {
          event.preventDefault(); // Предотвратить стандартное поведение
          activeIndex--;
          updateItems(activeIndex);
        } else if (activeIndex === 0) {
          event.preventDefault(); // Предотвратить стандартное поведение
          // Удалить фиксированный класс и позволить прокрутку вверх
          gradeSection.classList.remove('fixed');
          isFixed = false;
          document.body.style.overflow = 'auto';
          window.scrollBy(0, event.deltaY);
        }
      }
    };
    var handleKeydown = function handleKeydown(event) {
      if (!isFixed) return;
      if (event.key === "ArrowDown" || event.key === "ArrowRight") {
        if (activeIndex < items.length - 1) {
          activeIndex++;
          updateItems(activeIndex);
        } else if (activeIndex === items.length - 1) {
          // Удалить фиксированный класс и позволить прокрутку вниз
          gradeSection.classList.remove('fixed');
          isFixed = false;
          document.body.style.overflow = 'auto';
          window.scrollBy(0, 10); // Корректируйте значение по необходимости
        }
      } else if (event.key === "ArrowUp" || event.key === "ArrowLeft") {
        if (activeIndex > 0) {
          activeIndex--;
          updateItems(activeIndex);
        } else if (activeIndex === 0) {
          // Удалить фиксированный класс и позволить прокрутку вверх
          gradeSection.classList.remove('fixed');
          isFixed = false;
          document.body.style.overflow = 'auto';
          window.scrollBy(0, -10); // Корректируйте значение по необходимости
        }
      }
    };

    document.addEventListener('keydown', handleKeydown);
    gradeSection.addEventListener('wheel', handleScroll, {
      passive: false
    });
  }
};


/***/ }),

/***/ "./js/modules/modal/init-modals.js":
/*!*****************************************!*\
  !*** ./js/modules/modal/init-modals.js ***!
  \*****************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   initModals: function() { return /* binding */ initModals; },
/* harmony export */   modals: function() { return /* binding */ modals; }
/* harmony export */ });
/* harmony import */ var _modals__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modals */ "./js/modules/modal/modals.js");

var modals;
var settings = {
  'default': {
    preventDefault: true,
    stopPlay: true,
    lockFocus: true,
    startFocus: true,
    focusBack: true,
    resetScrollPos: true,
    eventTimeout: 400,
    openCallback: false,
    closeCallback: false
  },
  // modal-1, modal-6 добавлен исключительно для примера при добавлении на проект ключ и обект записанный в нём нужно удалить
  'modal-1': {
    openCallback: function openCallback() {
      return console.log('Я отработаю при открытии modal-1');
    },
    closeCallback: function closeCallback() {
      return console.log('Я отработаю при закрытии modal-1');
    }
  }
};
var initModals = function initModals() {
  var modalElements = document.querySelectorAll('.modal');
  if (modalElements.length) {
    modalElements.forEach(function (el) {
      setTimeout(function () {
        el.classList.remove('modal--preload');
      }, 100);
    });
  }
  modals = new _modals__WEBPACK_IMPORTED_MODULE_0__.Modals(settings);
  // Используйте в разработке экспортируемую переменную modals, window сделан для бэкэнда
  window.modals = modals;
};


/***/ }),

/***/ "./js/modules/modal/modals.js":
/*!************************************!*\
  !*** ./js/modules/modal/modals.js ***!
  \************************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Modals: function() { return /* binding */ Modals; }
/* harmony export */ });
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../utils/focus-lock */ "./js/utils/focus-lock.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }


var Modals = /*#__PURE__*/function () {
  function Modals() {
    var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
    _classCallCheck(this, Modals);
    this._scrollLock = new _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_0__.ScrollLock();
    this._focusLock = new _utils_focus_lock__WEBPACK_IMPORTED_MODULE_1__.FocusLock();
    this._modalOpenElements = document.querySelectorAll('[data-open-modal]');
    this._stackModalElements = [];
    this._openedModalElement = null;
    this._modalName = null;
    this._enableScrolling = true;
    this._settingKey = 'default';
    this._settings = settings;
    this._preventDefault = this._settings[this._settingKey].preventDefault;
    this._stopPlay = this._settings[this._settingKey].stopPlay;
    this._lockFocus = this._settings[this._settingKey].lockFocus;
    this._startFocus = this._settings[this._settingKey].startFocus;
    this._focusBack = this._settings[this._settingKey].focusBack;
    this._eventTimeout = this._settings[this._settingKey].eventTimeout;
    this._resetScrollPos = this._settings[this._settingKey].resetScrollPos;
    this._openCallback = this._settings[this._settingKey].openCallback;
    this._closeCallback = this._settings[this._settingKey].closeCallback;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
    this._documentClickHandler = this._documentClickHandler.bind(this);
    this._modalClickHandler = this._modalClickHandler.bind(this);
    this._init();
  }
  _createClass(Modals, [{
    key: "_init",
    value: function _init() {
      if (this._modalOpenElements.length) {
        document.addEventListener('click', this._documentClickHandler);
      }
    }
  }, {
    key: "_setSettings",
    value: function _setSettings() {
      var settingKey = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._settingKey;
      if (!this._settings[settingKey]) {
        return;
      }
      this._preventDefault = typeof this._settings[settingKey].preventDefault === 'boolean' ? this._settings[settingKey].preventDefault : this._settings[this._settingKey].preventDefault;
      this._stopPlay = typeof this._settings[settingKey].stopPlay === 'boolean' ? this._settings[settingKey].stopPlay : this._settings[this._settingKey].stopPlay;
      this._lockFocus = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].lockFocus : this._settings[this._settingKey].lockFocus;
      this._startFocus = typeof this._settings[settingKey].startFocus === 'boolean' ? this._settings[settingKey].startFocus : this._settings[this._settingKey].startFocus;
      this._focusBack = typeof this._settings[settingKey].lockFocus === 'boolean' ? this._settings[settingKey].focusBack : this._settings[this._settingKey].focusBack;
      this._resetScrollPos = typeof this._settings[settingKey].resetScrollPos === 'boolean' ? this._settings[settingKey].resetScrollPos : this._settings[this._settingKey].resetScrollPos;
      this._eventTimeout = typeof this._settings[settingKey].eventTimeout === 'number' ? this._settings[settingKey].eventTimeout : this._settings[this._settingKey].eventTimeout;
      this._openCallback = this._settings[settingKey].openCallback || this._settings[this._settingKey].openCallback;
      this._closeCallback = this._settings[settingKey].closeCallback || this._settings[this._settingKey].closeCallback;
    }
  }, {
    key: "_documentClickHandler",
    value: function _documentClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-open-modal]')) {
        return;
      }
      evt.preventDefault();
      this._modalName = target.closest('[data-open-modal]').dataset.openModal;
      if (!this._modalName) {
        return;
      }
      this.open();
    }
  }, {
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var isEscKey = evt.key === 'Escape' || evt.key === 'Esc';
      if (isEscKey) {
        evt.preventDefault();
        this.close(document.querySelector('.modal.is-active').dataset.modal);
      }
    }
  }, {
    key: "_modalClickHandler",
    value: function _modalClickHandler(evt) {
      var target = evt.target;
      if (!target.closest('[data-close-modal]')) {
        return;
      }
      if (target.closest('[data-close-modal="back"]')) {
        this.back();
      } else {
        this.close(target.closest('[data-modal]').dataset.modal);
        this._stackModalElements = [];
      }
    }
  }, {
    key: "_addListeners",
    value: function _addListeners(modal) {
      modal.addEventListener('click', this._modalClickHandler);
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "_removeListeners",
    value: function _removeListeners(modal) {
      modal.removeEventListener('click', this._modalClickHandler);
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "open",
    value: function open() {
      var _this = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      if (!modal || modal.classList.contains('is-active')) {
        return;
      }
      document.removeEventListener('click', this._documentClickHandler);
      this._openedModalElement = document.querySelector('.modal.is-active');
      if (this._openedModalElement) {
        this._enableScrolling = false;
        this.close(this._openedModalElement.dataset.modal);
      }
      this._setSettings(modalName);
      modal.classList.add('is-active');
      if (modalName !== this._stackModalElements[this._stackModalElements.length - 1]) {
        this._stackModalElements.push(modalName);
      }
      if (!this._openedModalElement) {
        this._scrollLock.disableScrolling();
      }
      if (this._openCallback) {
        this._openCallback();
      }
      if (this._lockFocus) {
        this._focusLock.lock('.modal.is-active', this._startFocus);
      }
      if (this._resetScrollPos) {
        modal.scrollTo(0, 0);
      }
      setTimeout(function () {
        _this._addListeners(modal);
        document.addEventListener('click', _this._documentClickHandler);
      }, this._eventTimeout);
    }
  }, {
    key: "back",
    value: function back() {
      if (!this._stackModalElements.length) {
        return;
      }
      var activeModal = this._stackModalElements[this._stackModalElements.length - 1];
      var prevModal = this._stackModalElements[this._stackModalElements.length - 2];
      if (this._stackModalElements.length === 1) {
        this._stackModalElements = [];
      }
      if (prevModal) {
        this._stackModalElements.pop();
        this.open(prevModal);
      }
      this.close(activeModal);
    }
  }, {
    key: "close",
    value: function close() {
      var _this2 = this;
      var modalName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this._modalName;
      var disableScrolling = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;
      var lockFocus = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;
      var modal = document.querySelector("[data-modal=\"".concat(modalName, "\"]"));
      document.removeEventListener('click', this._documentClickHandler);
      if (!modal || !modal.classList.contains('is-active')) {
        return;
      }
      if (this._lockFocus && !lockFocus) {
        this._focusLock.unlock(this._focusBack);
      }
      modal.classList.remove('is-active');
      this._removeListeners(modal);
      if (this._closeCallback) {
        this._closeCallback();
      }
      if (this._enableScrolling && !disableScrolling) {
        setTimeout(function () {
          _this2._scrollLock.enableScrolling();
        }, this._eventTimeout);
      }
      setTimeout(function () {
        document.addEventListener('click', _this2._documentClickHandler);
      }, this._eventTimeout);
      this._setSettings('default');
      this._enableScrolling = true;
    }
  }]);
  return Modals;
}();

/***/ }),

/***/ "./js/utils/focus-lock.js":
/*!********************************!*\
  !*** ./js/utils/focus-lock.js ***!
  \********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   FocusLock: function() { return /* binding */ FocusLock; }
/* harmony export */ });
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }
var SELECTORS = ['a[href]', 'area[href]', 'input:not([disabled]):not([type="hidden"]):not([aria-hidden])', 'select:not([disabled]):not([aria-hidden])', 'textarea:not([disabled]):not([aria-hidden])', 'button:not([disabled]):not([aria-hidden])', 'iframe', 'object', 'embed', '[contenteditable]', '[tabindex]:not([tabindex^="-"])'];
var FocusLock = /*#__PURE__*/function () {
  function FocusLock() {
    _classCallCheck(this, FocusLock);
    this._lockedSelector = null;
    this._focusableElements = null;
    this._endElement = null;
    this._selectors = SELECTORS;
    this._documentKeydownHandler = this._documentKeydownHandler.bind(this);
  }
  _createClass(FocusLock, [{
    key: "_documentKeydownHandler",
    value: function _documentKeydownHandler(evt) {
      var activeElement = document.activeElement;
      if (evt.key === 'Tab') {
        if (!this._focusableElements.length) {
          evt.preventDefault();
          activeElement.blur();
          return;
        }
        if (this._focusableElements.length === 1) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
        if (this._focusableElements.length > 1 && !activeElement.closest(this._lockedSelector)) {
          evt.preventDefault();
          this._focusableElements[0].focus();
          return;
        }
      }
      if (evt.key === 'Tab' && !evt.shiftKey && activeElement === this._focusableElements[this._focusableElements.length - 1]) {
        evt.preventDefault();
        this._focusableElements[0].focus();
      }
      if (evt.key === 'Tab' && evt.shiftKey && activeElement === this._focusableElements[0]) {
        evt.preventDefault();
        this._focusableElements[this._focusableElements.length - 1].focus();
      }
    }
  }, {
    key: "lock",
    value: function lock(lockedSelector) {
      var startFocus = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;
      this.unlock();
      this._lockedSelector = lockedSelector;
      var lockedElement = document.querySelector(this._lockedSelector);
      if (!lockedElement) {
        return;
      }
      this._focusableElements = lockedElement.querySelectorAll(this._selectors);
      this._endElement = document.activeElement;
      var startElement = lockedElement.querySelector('[data-focus]') || this._focusableElements[0];
      if (this._endElement) {
        this._endElement.blur();
      }
      if (startElement && startFocus) {
        startElement.focus();
      }
      document.addEventListener('keydown', this._documentKeydownHandler);
    }
  }, {
    key: "unlock",
    value: function unlock() {
      var returnFocus = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;
      if (this._endElement && returnFocus) {
        this._endElement.focus();
      }
      this._lockedSelector = null;
      this._focusableElements = null;
      this._endElement = null;
      document.removeEventListener('keydown', this._documentKeydownHandler);
    }
  }]);
  return FocusLock;
}();
window.focusLock = new FocusLock();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   iosChecker: function() { return /* binding */ iosChecker; }
/* harmony export */ });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/***/ (function(__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ScrollLock: function() { return /* binding */ ScrollLock; }
/* harmony export */ });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");
function _typeof(obj) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && "function" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }, _typeof(obj); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(arg) { var key = _toPrimitive(arg, "string"); return _typeof(key) === "symbol" ? key : String(key); }
function _toPrimitive(input, hint) { if (_typeof(input) !== "object" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || "default"); if (_typeof(res) !== "object") return res; throw new TypeError("@@toPrimitive must return a primitive value."); } return (hint === "string" ? String : Number)(input); }

var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);
    this._iosChecker = _ios_checker__WEBPACK_IMPORTED_MODULE_0__.iosChecker;
    this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }
  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;
      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();
      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");
        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }
      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;
      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });
      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);
  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	!function() {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = function(exports, definition) {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	!function() {
/******/ 		__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }
/******/ 	}();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	!function() {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = function(exports) {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	}();
/******/ 	
/************************************************************************/
var __webpack_exports__ = {};
// This entry need to be wrapped in an IIFE because it need to be isolated against other modules in the chunk.
!function() {
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _modules_accordion_init_accordion__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./modules/accordion/init-accordion */ "./js/modules/accordion/init-accordion.js");
/* harmony import */ var _modules_header_accordion_init_header_accordion__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./modules/header-accordion/init-header-accordion */ "./js/modules/header-accordion/init-header-accordion.js");
/* harmony import */ var _modules_custom_select_init_custom_select__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/custom-select/init-custom-select */ "./js/modules/custom-select/init-custom-select.js");
/* harmony import */ var _modules_header_init_header__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/header/init-header */ "./js/modules/header/init-header.js");
/* harmony import */ var _modules_modal_init_modals__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/modal/init-modals */ "./js/modules/modal/init-modals.js");
/* harmony import */ var _modules_init_phone_mask__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./modules/init-phone-mask */ "./js/modules/init-phone-mask.js");
/* harmony import */ var _modules_init_phone_validation__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./modules/init-phone-validation */ "./js/modules/init-phone-validation.js");
/* harmony import */ var _modules_init_info_slider__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./modules/init-info-slider */ "./js/modules/init-info-slider.js");
/* harmony import */ var _modules_initButtons__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./modules/initButtons */ "./js/modules/initButtons.js");
/* harmony import */ var _modules_initAnimation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./modules/initAnimation */ "./js/modules/initAnimation.js");
/* harmony import */ var _modules_initScroll__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./modules/initScroll */ "./js/modules/initScroll.js");











window.addEventListener('DOMContentLoaded', function () {
  window.addEventListener('load', function () {
    (0,_modules_header_init_header__WEBPACK_IMPORTED_MODULE_3__.initHeader)();
    (0,_modules_header_accordion_init_header_accordion__WEBPACK_IMPORTED_MODULE_1__.initHeaderAccordion)();
    (0,_modules_modal_init_modals__WEBPACK_IMPORTED_MODULE_4__.initModals)();
    (0,_modules_custom_select_init_custom_select__WEBPACK_IMPORTED_MODULE_2__.initCustomSelect)();
    (0,_modules_accordion_init_accordion__WEBPACK_IMPORTED_MODULE_0__.initAccordion)();
    (0,_modules_init_phone_mask__WEBPACK_IMPORTED_MODULE_5__.initPhoneMask)();
    (0,_modules_init_phone_validation__WEBPACK_IMPORTED_MODULE_6__.initPhoneValidation)();
    (0,_modules_init_info_slider__WEBPACK_IMPORTED_MODULE_7__.initInfoSlider)();
    (0,_modules_initButtons__WEBPACK_IMPORTED_MODULE_8__.initButtons)();
    (0,_modules_initAnimation__WEBPACK_IMPORTED_MODULE_9__.initAnimation)();
    (0,_modules_initScroll__WEBPACK_IMPORTED_MODULE_10__.initScroll)();
  });
});
}();
/******/ })()
;
//# sourceMappingURL=main.min.js.map